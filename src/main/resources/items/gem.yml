BaseGem:
  abstract: true
  process:
    - unique: true
    - key: quality
      type: weight
      save: true
      values:
        - 200: "粗糙"
        - 100: "精良"
        - 50: "稀有"
        - 25: "优秀"
        - 12: "史诗"
        - 6: "传说"
    - run: "set 品质数据模板 = mapTemplate [ '颜色' '评分' '材质' ]"
    - key: 品质数据Map
      meta: define
      type: map
      粗糙: [ "&8", "10", "YELLOW_DYE" ]
      精良: [ "&e", "20", "PINK_DYE" ]
      稀有: [ "&b", "30", "MAGENTA_DYE" ]
      优秀: [ "&a", "40", "PURPLE_DYE" ]
      史诗: [ "&5", "50", "RED_DYE" ]
      传说: [ "&6", "60", "RED_DYE" ]
    - run: |-
        set list = &品质数据Map get &quality
        set 品质数据 = mapOf with &品质数据模板 &list
        set 品质颜色 = &品质数据 get '颜色'
        set 品质评分 = &品质数据 get '评分'
        set 材质 = &品质数据 get '材质'
        set 品质 = join [ &品质颜色 , &quality ]
    - run: "set 总评分 to type int calculate ' { &品质评分 } * 10 '"
    - material: "{&材质}"
    - glow-color: "{&品质颜色}"
    - run: |-
        var name to '模板'
        var attributes to '无' 
        set 名字 to &name
        set 属性 to join &attributes by '\\n'
    - display: "{&品质颜色}{&名字}宝石"
    - lore:
        - "&f&m─&7&m─────────&f&m─&f介绍&f&m─&7&m─────────&f&m─"
        - ""
        - "&f>> &7品质: {&品质}             &7评分: &c{&总评分}"
        - "&e天然的宝石，据说颜色越深，品质越高。"
        - ""
        - "&f&m─&7&m─────────&f&m─&f属性统计&f&m─&7&m─────────&f&m─"
        - ""
        - "{&属性}"
        - ""
        - "&f&m─&7&m─────────&f&m─&f其它&f&m─&7&m─────────&f&m─"
        - ""
        - "&7请将我放到有宝石槽的物品上"
        - ""
    - nbt:
        unique: "{&unique}"
        IGNORE_ATTRIBUTE: "true"
    - action:
        type: build
        sync: true
        run: |-
          set attKey to inline "gem-{&unique}"
          attr addItemAttr &item &attKey attr readLore &item
    - action:
        type: click_item
        sync: true
        run: js_invoke::gem.js::inlay

AttackGem:
  extends:
    - "BaseGem"
  process:
    #给父物品提供了变量name和attributes
    - key: name
      type: string
      override: true
      value: "攻击"
    - key: attributes
      type: strings
      override: true
      values:
        - "&f>> &7攻击力 &c+{ calculate '10 * {&总评分}' }"
        - "&f>> &7攻击力 &c+{ calculate '{&总评分}/10' }&8(%)"
DefenseGem:
  extends:
    - "BaseGem"
  process:
    #给父物品提供了变量name和attributes
    - key: name
      type: string
      override: true
      value: "防御"
    - key: attributes
      type: strings
      override: true
      values:
        - "&f>> &7护甲 &c+{ calculate '10 * {&总评分}' }"
        - "&f>> &7护甲 &c+{ calculate '{&总评分}/10' }&8(%)"

#宝石拆卸器
ExampleDisassemble:
  process:
    - key: quality
      type: weight
      save: true
      values:
        - 200: "粗糙"
        - 100: "精良"
    - run: "set 品质数据模板 = mapTemplate [ '颜色'  '材质' ]"
    - key: 品质数据Map
      meta: define
      type: map
      粗糙: [ "&8", "flint" ]
      精良: [ "&e", "ink_sac" ]
    - run: |-
        set list = &品质数据Map get &quality
        set 品质数据 = mapOf with &品质数据模板 &list
        set 品质颜色 = &品质数据 get '颜色'
        set 材质 = &品质数据 get '材质'
        set 品质 = join [ &品质颜色 , &quality ]
    - display: "{&品质} &7拆卸石"
    - material: "flint"
    - glow-color: "{&品质颜色}"
    - lore:
        - "&f&m─&7&m─────────&f&m─&f介绍&f&m─&7&m─────────&f&m─"
        - ""
        - "&7从下到上依次拆卸..."
        - "{if check &quality equals '精良' then '&a返还宝石' else '&c不返还宝石'}"
        - "&f&m─&7&m─────────&f&m─&f其它&f&m─&7&m─────────&f&m─"
        - ""
        - "&7请将我放到有宝石的物品上"
    - action:
        type: click_item
        sync: true
        run: js_invoke::gem.js::{if check &quality equals '精良' then 'disassembleWithGem' else 'disassembleWithOutGem'}
